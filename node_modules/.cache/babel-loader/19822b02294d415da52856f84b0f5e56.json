{"ast":null,"code":"import _classCallCheck from\"/Users/kylechart/Desktop/Programming/ZTMWD-RoboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kylechart/Desktop/Programming/ZTMWD-RoboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kylechart/Desktop/Programming/ZTMWD-RoboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kylechart/Desktop/Programming/ZTMWD-RoboFriends/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';var Card=/*#__PURE__*/function(_Component){_inherits(Card,_Component);var _super=_createSuper(Card);function Card(){_classCallCheck(this,Card);return _super.apply(this,arguments);}_createClass(Card,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"bg-light-green dib br3 ma2 grow tc bw2 shadow-5 \"},/*#__PURE__*/React.createElement(\"img\",{src:\"https://robohash.org/\".concat(this.props.id,\"?200x200\"),alt:\"\"}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,this.props.name),/*#__PURE__*/React.createElement(\"p\",null,this.props.email)));}}]);return Card;}(Component);//TRADITIONAL JAVA\n// const Card = ({ name, id, email }) => { - OR ADD THEM IN THE FUNCTION PARAMATERS, FOR EVEN CLEANER LOOKING CODE! REMOVING THE NEED FOR THE SECOND CONST, But I will leave it for the example.\n//\tconst { name, id, email } = props; - THIS IS ANOTHER WAY OF GETTING THE SAME RESULST, JUST BY USING DESTRUCTURING! \n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='' /> - THAT GETS THE ID NUMBER OF THE USER AND RANDOMISES THE IMAGE, SO EVERY ROBOT IS DIFFERENT.\n// \t\t\t\t<div>\n// \t\t\t\t\t<h2>{name}</h2>\n// \t\t\t\t\t<p>{email}</p>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t).\n// }\nexport default Card;","map":{"version":3,"sources":["/Users/kylechart/Desktop/Programming/ZTMWD-RoboFriends/src/Card.js"],"names":["React","Component","Card","props","id","name","email"],"mappings":"oqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAGMC,CAAAA,I,oOACI,CACR,mBACC,2BAAK,SAAS,CAAC,kDAAf,eACC,2BAAK,GAAG,gCAA0B,KAAKC,KAAL,CAAWC,EAArC,YAAR,CAA2D,GAAG,CAAC,EAA/D,EADD,cAEC,4CACC,8BAAK,KAAKD,KAAL,CAAWE,IAAhB,CADD,cAEC,6BAAI,KAAKF,KAAL,CAAWG,KAAf,CAFD,CAFD,CADD,CASA,C,kBAXiBL,S,EAcnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,cAAeC,CAAAA,IAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nclass Card extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='bg-light-green dib br3 ma2 grow tc bw2 shadow-5 '>\n\t\t\t\t<img src={`https://robohash.org/${this.props.id}?200x200`} alt='' />\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{this.props.name}</h2>\n\t\t\t\t\t<p>{this.props.email}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t); \n\t}\n}\n\n//TRADITIONAL JAVA\n// const Card = ({ name, id, email }) => { - OR ADD THEM IN THE FUNCTION PARAMATERS, FOR EVEN CLEANER LOOKING CODE! REMOVING THE NEED FOR THE SECOND CONST, But I will leave it for the example.\n//\tconst { name, id, email } = props; - THIS IS ANOTHER WAY OF GETTING THE SAME RESULST, JUST BY USING DESTRUCTURING! \n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='' /> - THAT GETS THE ID NUMBER OF THE USER AND RANDOMISES THE IMAGE, SO EVERY ROBOT IS DIFFERENT.\n// \t\t\t\t<div>\n// \t\t\t\t\t<h2>{name}</h2>\n// \t\t\t\t\t<p>{email}</p>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t).\n// }\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}