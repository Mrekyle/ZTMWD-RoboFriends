{"ast":null,"code":"var _jsxFileName = \"/Users/kylechart/Desktop/Websites/robofriends/src/Hello.js\";\nimport React, { Component } from 'react';\nimport './Hello.css'; // IN REACT CODING.\n// class Hello extends Component {\n// \trender() {\n// \t\treturn  (\t//WHEN WANTING TO RETURN MULTIPLE LINES OF CODE. IT NEEDS TO BE WRAPPED IN BRACKETS TO REGISTER ALL THE LINES AS ONE EXPRESSION!\t\n// \t\t<div>\n// \t\t\t<h1 className='code bg-light-yellow f1 tc'>Hello World</h1>\n// \t\t\t<p>{this.props.greeting}</p>\n// \t\t</div>\n// \t)\n// \t}\n// }\n// export default Hello;\n// IN TRADITIONAL JAVASCIPT CODE.\n// const Hello = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<h1 className='code bg-light-yellow f1 tc'>Hello World</h1>\n// \t\t\t<p>{props.greeting}</p>\n// \t\t</div>\n// \t)\n// }\n// export default Hello;\n\nclass Hello extends Component {\n  render() {\n    return (\n      /*#__PURE__*/\n      //WHEN WANTING TO RETURN MULTIPLE LINES OF CODE. IT NEEDS TO BE WRAPPED IN BRACKETS TO REGISTER ALL THE LINES AS ONE EXPRESSION!\t\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 3\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"code bg-light-yellow f1 tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 4\n        }\n      }, \"Hello World\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 4\n        }\n      }, this.props.greeting))\n    );\n  }\n\n}\n\nexport default Hellol;","map":{"version":3,"sources":["/Users/kylechart/Desktop/Websites/robofriends/src/Hello.js"],"names":["React","Component","Hello","render","props","greeting","Hellol"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,aAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC7BE,EAAAA,MAAM,GAAG;AACR;AAAA;AAAU;AACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,SAAS,EAAC,4BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKC,KAAL,CAAWC,QAAf,CAFD;AADA;AAMA;;AAR4B;;AAW9B,eAAeC,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Hello.css'\n\n\n// IN REACT CODING.\n// class Hello extends Component {\n// \trender() {\n// \t\treturn  (\t//WHEN WANTING TO RETURN MULTIPLE LINES OF CODE. IT NEEDS TO BE WRAPPED IN BRACKETS TO REGISTER ALL THE LINES AS ONE EXPRESSION!\t\n// \t\t<div>\n// \t\t\t<h1 className='code bg-light-yellow f1 tc'>Hello World</h1>\n// \t\t\t<p>{this.props.greeting}</p>\n// \t\t</div>\n// \t)\n// \t}\n// }\n\n// export default Hello;\n\n// IN TRADITIONAL JAVASCIPT CODE.\n// const Hello = (props) => {\n// \treturn (\n// \t\t<div>\n// \t\t\t<h1 className='code bg-light-yellow f1 tc'>Hello World</h1>\n// \t\t\t<p>{props.greeting}</p>\n// \t\t</div>\n// \t)\n// }\n\n// export default Hello;\n\nclass Hello extends Component {\n\trender() {\n\t\treturn  (\t//WHEN WANTING TO RETURN MULTIPLE LINES OF CODE. IT NEEDS TO BE WRAPPED IN BRACKETS TO REGISTER ALL THE LINES AS ONE EXPRESSION!\t\n\t\t<div>\n\t\t\t<h1 className='code bg-light-yellow f1 tc'>Hello World</h1>\n\t\t\t<p>{this.props.greeting}</p>\n\t\t</div>\n\t)\n\t}\n}\n\nexport default Hellol;"]},"metadata":{},"sourceType":"module"}