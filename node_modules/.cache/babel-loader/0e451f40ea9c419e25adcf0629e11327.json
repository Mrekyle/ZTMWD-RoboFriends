{"ast":null,"code":"var _jsxFileName = \"/Users/kylechart/Desktop/Websites/robo-friends/src/App.js\";\nimport React, { Component } from 'react';\nimport Cardlist from './Cardlist';\nimport Scroll from './Scroll';\nimport SearchBox from './SearchBox'; // WHEN RENCDERING A REACT APP, ALL FILES MUST START WITH A CAPITOL LETTER!!!! \n// import { robots } from './robots.js' //IF EXPORTING MULTIPLE COMPONENTS/ITEMS, IT HAS TO BE DE STRUCTURED!\n\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.searchChange = event => {\n      // This event is allowing the inputs from the search box to change the displayed cards - When ever the state cant be defined, use arrow functions like in this project.\n      this.setState({\n        searchFeild: event.target.value\n      }); // This is a must do in React for when you want to change a state due to the inputs, in this case, its the value thats been inputted into the searchbar.\n    };\n\n    this.state = {\n      // This is what is describing the app! These elements below are something that can change. \n      robots: [robots],\n      searchFeild: ' '\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users') //Effectlvily this is grabbing the users from a database somewhere else in the world, and updating the website in real time.\n    .then(response => {\n      return response.json();\n    }).then(users => {\n      this.setState(robots);\n    });\n  }\n\n  render() {\n    const robotsFilter = this.state.robots.filter(robots => {\n      // This has been added to the render, so that instead of saying this.state.robots i now have access to robotsFilter, which filters all the robots, depending on the input from the user.\n      return robots.name.toLowerCase().includes(this.state.searchFeild.toLowerCase());\n    });\n\n    if (this.state.robots.length === 0) {\n      // Based on the time it takes to load the robots, it may put out a loading statment.\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 12\n        }\n      }, \"Loading\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tc\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 4\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"f1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 5\n        }\n      }, \"Robo Friends\"), /*#__PURE__*/React.createElement(SearchBox, {\n        searchChange: this.searchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }\n      }), /*#__PURE__*/React.createElement(Scroll, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Cardlist, {\n        robots: robotsFilter,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }\n      })));\n    }\n  }\n\n}\n\nexport default App; //Once created/during the process of building an app it is a good idea to clean the code up, and clean the file structure\n//This is so its esasier to read, and easier for outside developers to come in and find the files they need.\n//If needed a reference to this process, react lesson 215\n//When wanting to deoply the app, react has a special feature called 'npm run build' this creates an optimised set of folders and minified \n//Code, so that the app is as fast as it possibly can be.\n//To make sure that something still happens on the page when an error occurs, you can use errorBounrdy, instead of editing this code heavily\n//Check out react lesson 219 for the full explination/google it. Usefull form when ever creating any app in react. The users of the build\n// Wont see the error report, they will see what the error boundry says to do.","map":{"version":3,"sources":["/Users/kylechart/Desktop/Websites/robo-friends/src/App.js"],"names":["React","Component","Cardlist","Scroll","SearchBox","App","constructor","searchChange","event","setState","searchFeild","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","robotsFilter","filter","name","toLowerCase","includes","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAAoC;AACpC;;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC3BK,EAAAA,WAAW,GAAG;AACb;;AADa,SAiBfC,YAjBe,GAiBCC,KAAD,IAAW;AAAE;AAC3B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd,EADyB,CAC0B;AACnD,KAnBc;;AAEZ,SAAKC,KAAL,GAAa;AAAE;AACdC,MAAAA,MAAM,EAAE,CAACA,MAAD,CADI;AAEZJ,MAAAA,WAAW,EAAE;AAFD,KAAb;AAID;;AAEFK,EAAAA,iBAAiB,GAAG;AACnBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CAAoD;AAApD,KACEC,IADF,CACOC,QAAQ,IAAI;AACjB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIOG,KAAK,IAAI;AACd,WAAKX,QAAL,CAAcK,MAAd;AACA,KANF;AAOA;;AAIAO,EAAAA,MAAM,GAAG;AACR,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,CAAyBT,MAAM,IAAI;AAAE;AAC1D,aAAOA,MAAM,CAACU,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC,KAAKb,KAAL,CAAWH,WAAX,CAAuBe,WAAvB,EAAnC,CAAP;AACC,KAFoB,CAArB;;AAGA,QAAI,KAAKZ,KAAL,CAAWC,MAAX,CAAkBa,MAAlB,KAA6B,CAAjC,EAAoC;AAAE;AACrC,0BAAQ;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAR;AACA,KAFD,MAEO;AACP,0BACC;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AAAI,QAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADD,eAEC,oBAAC,SAAD;AAAW,QAAA,YAAY,EAAE,KAAKpB,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFD,eAGC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEe,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,CAHD,CADD;AASA;AACA;;AAtC0B;;AAyC5B,eAAejB,GAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component }from 'react';\nimport Cardlist from './Cardlist';\nimport Scroll from './Scroll'\nimport SearchBox from './SearchBox' // WHEN RENCDERING A REACT APP, ALL FILES MUST START WITH A CAPITOL LETTER!!!! \n// import { robots } from './robots.js' //IF EXPORTING MULTIPLE COMPONENTS/ITEMS, IT HAS TO BE DE STRUCTURED!\nimport './App.css'\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\t\tthis.state = { // This is what is describing the app! These elements below are something that can change. \n\t\t\t\trobots: [robots],\n\t\t\t\tsearchFeild: ' '\n\t\t};\n\t}\n\ncomponentDidMount() {\n\tfetch('https://jsonplaceholder.typicode.com/users') //Effectlvily this is grabbing the users from a database somewhere else in the world, and updating the website in real time.\n\t\t.then(response => {\n\t\t\treturn response.json()\n\t\t})\n\t\t.then(users => { \n\t\t\tthis.setState(robots)\n\t\t});\n}\nsearchChange = (event) => { // This event is allowing the inputs from the search box to change the displayed cards - When ever the state cant be defined, use arrow functions like in this project.\n\tthis.setState({ searchFeild: event.target.value}); // This is a must do in React for when you want to change a state due to the inputs, in this case, its the value thats been inputted into the searchbar.\n}\n\trender() {\n\t\tconst robotsFilter = this.state.robots.filter(robots => { // This has been added to the render, so that instead of saying this.state.robots i now have access to robotsFilter, which filters all the robots, depending on the input from the user.\n\t\treturn robots.name.toLowerCase().includes(this.state.searchFeild.toLowerCase());\n\t\t})\n\t\tif (this.state.robots.length === 0) { // Based on the time it takes to load the robots, it may put out a loading statment.\n\t\t\treturn  <h1 className='tc'>Loading</h1>\n\t\t} else {\n\t\treturn ( \n\t\t\t<div className='tc'>\n\t\t\t\t<h1 className='f1'>Robo Friends</h1>\n\t\t\t\t<SearchBox searchChange={this.searchChange} />\n\t\t\t\t<Scroll>\n\t\t\t\t\t<Cardlist robots={robotsFilter}/>\n\t\t\t\t</Scroll>\n\t\t\t</div>\n\t\t);\n\t}\t\n\t}\n}\n\nexport default App;\n\n//Once created/during the process of building an app it is a good idea to clean the code up, and clean the file structure\n//This is so its esasier to read, and easier for outside developers to come in and find the files they need.\n//If needed a reference to this process, react lesson 215\n\n//When wanting to deoply the app, react has a special feature called 'npm run build' this creates an optimised set of folders and minified \n//Code, so that the app is as fast as it possibly can be.\n\n//To make sure that something still happens on the page when an error occurs, you can use errorBounrdy, instead of editing this code heavily\n//Check out react lesson 219 for the full explination/google it. Usefull form when ever creating any app in react. The users of the build\n// Wont see the error report, they will see what the error boundry says to do."]},"metadata":{},"sourceType":"module"}