{"ast":null,"code":"var _jsxFileName = \"/Users/kylechart/Desktop/Websites/robofriends/src/Card.js\";\nimport React, { Component } from 'react';\n\nclass Card extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-light-green dib br3 ma2 grow tc bw2 shadow-5 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `https://robohash.org/${this.props.id}?200x200`,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 5\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 6\n      }\n    }, this.props.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 6\n      }\n    }, this.props.email)));\n  }\n\n} //TRADITIONAL JAVA\n// const Card = ({ name, id, email }) => { - OR ADD THEM IN THE FUNCTION PARAMATERS, FOR EVEN CLEANER LOOKING CODE! REMOVING THE NEED FOR THE SECOND CONST, But I will leave it for the example.\n//\tconst { name, id, email } = props; - THIS IS ANOTHER WAY OF GETTING THE SAME RESULST, JUST BY USING DESTRUCTURING! \n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='' /> - THAT GETS THE ID NUMBER OF THE USER AND RANDOMISES THE IMAGE, SO EVERY ROBOT IS DIFFERENT.\n// \t\t\t\t<div>\n// \t\t\t\t\t<h2>{name}</h2>\n// \t\t\t\t\t<p>{email}</p>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t).\n// }\n\n\nexport default Card;","map":{"version":3,"sources":["/Users/kylechart/Desktop/Websites/robofriends/src/Card.js"],"names":["React","Component","Card","render","props","id","name","email"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,MAAMC,IAAN,SAAmBD,SAAnB,CAA6B;AAC5BE,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAK,MAAA,GAAG,EAAG,wBAAuB,KAAKC,KAAL,CAAWC,EAAG,UAAhD;AAA2D,MAAA,GAAG,EAAC,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWE,IAAhB,CADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKF,KAAL,CAAWG,KAAf,CAFD,CAFD,CADD;AASA;;AAX2B,C,CAc7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeL,IAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nclass Card extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='bg-light-green dib br3 ma2 grow tc bw2 shadow-5 '>\n\t\t\t\t<img src={`https://robohash.org/${this.props.id}?200x200`} alt='' />\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{this.props.name}</h2>\n\t\t\t\t\t<p>{this.props.email}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t); \n\t}\n}\n\n//TRADITIONAL JAVA\n// const Card = ({ name, id, email }) => { - OR ADD THEM IN THE FUNCTION PARAMATERS, FOR EVEN CLEANER LOOKING CODE! REMOVING THE NEED FOR THE SECOND CONST, But I will leave it for the example.\n//\tconst { name, id, email } = props; - THIS IS ANOTHER WAY OF GETTING THE SAME RESULST, JUST BY USING DESTRUCTURING! \n// \treturn (\n// \t\t\t<div>\n// \t\t\t\t<img src={`https://robohash.org/${id}?200x200`} alt='' /> - THAT GETS THE ID NUMBER OF THE USER AND RANDOMISES THE IMAGE, SO EVERY ROBOT IS DIFFERENT.\n// \t\t\t\t<div>\n// \t\t\t\t\t<h2>{name}</h2>\n// \t\t\t\t\t<p>{email}</p>\n// \t\t\t\t</div>\n// \t\t\t</div>\n// \t\t).\n// }\n\nexport default Card;"]},"metadata":{},"sourceType":"module"}